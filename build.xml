<project name="CNV Render Farm" default="dist" basedir=".">
  <description>
    A web server elastic cluster that renders 3D images on-demand, a project for CNV class @ IST
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="lib" location="lib"/>
  <property name="build" location="build"/>
  <property name="dist" location="."/>
  <property name="project-name" value="cnvRenderFarm"/>

  <target name="init">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile-deps" depends="init">
    <!-- Compile the java code from ${lib} into ${build} -->
    <javac srcdir="${lib}" destdir="${build}">
    </javac>
  </target>
  
  <target name="copy-jars" depends="compile-deps" description="copy required jars">
    <copy todir="${dist}">
      <fileset dir="${lib}/AWS"/>
    </copy>
  </target>
  
  <target name="compile" depends="copy-jars" description="compile the source">
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}">
      <classpath>
        <fileset dir="${dist}">
          <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${build}">
          <include name="**/*.class"/>
        </fileset>
      </classpath>
    </javac>
  </target>

  <!--<target name="instrument" depends="compile" description="test intrumentation">-->
    <!--<java classname="renderfarm.Instrumentation" fork="true">-->
      <!--<classpath>-->
        <!--<pathelement location="${dist}/${project-name}.jar"/>-->
        <!--<pathelement path="${java.class.path}"/>-->
      <!--</classpath>-->
    <!--</java> -->
  <!--</target>-->

  <target name="dist" depends="compile" description="generate the distribution">
    <!-- Put everything in ${build} into the a dist jar file -->
    <jar jarfile="${dist}/${project-name}.jar" basedir="${build}"/>
  </target>
  
  <target name="run" depends="dist" description="run the web server">
    <java classname="renderfarm.WebServer" fork="true">
      <classpath>
        <fileset dir="${dist}">
          <include name="**/*.jar"/>
        </fileset>
     </classpath>
    </java> 
  </target>

  <target name="clean"
        description="clean up">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}/${project-name}.jar"/>
  </target>
</project>
